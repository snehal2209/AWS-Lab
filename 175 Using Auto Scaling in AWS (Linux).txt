Task 1: Creating a new AMI for Amazon EC2 Auto Scaling

    Task 1.1: Connecting to the Command Host instance
        - Connect to the Command Host EC2 instance using EC2 Instance Connect or an SSH client.

    Task 1.2: Configuring the AWS CLI
        - Confirm the current region using:
          ```
          curl http://169.254.169.254/latest/dynamic/instance-identity/document | grep region
          ```
        - Update AWS CLI credentials using:
          ```
          aws configure
          ```

    Task 1.3: Creating a new EC2 Instance
        - Inspect UserData.txt script:
          ```
          more UserData.txt
          ```
        - Copy KEYNAME, AMIID, HTTPACCESS, and SUBNETID values.
        - Run the following AWS CLI command with the copied values:
          ```
          aws ec2 run-instances --key-name KEYNAME --instance-type t3.micro --image-id AMIID --user-data file:///home/ec2-user/UserData.txt --security-group-ids HTTPACCESS --subnet-id SUBNETID --associate-public-ip-address --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=WebServer}]' --output text --query 'Instances[*].InstanceId'
          ```
        - Copy the InstanceId value for later use.
        - Monitor instance status using:
          ```
          aws ec2 wait instance-running --instance-ids NEW-INSTANCE-ID
          ```
        - Obtain the public DNS name using:
          ```
          aws ec2 describe-instances --instance-id NEW-INSTANCE-ID --query 'Reservations[0].Instances[0].NetworkInterfaces[0].Association.PublicDnsName'
          ```
        - Wait for the web server to be installed and then test it by opening the Public DNS address in a browser.

    Task 1.4: Creating a Custom AMI
        - Create a new AMI based on the instance using:
          ```
          aws ec2 create-image --name WebServerAMI --instance-id NEW-INSTANCE-ID
          ```
          Note: While the AMI is being created, proceed to the next task.

Task 2: Creating an auto scaling environment

    Task 2.1: Creating an Application Load Balancer
        - Create a new Application Load Balancer with specified configurations.

    Task 2.2: Creating a launch template
        - Create a launch template for the Auto Scaling group with specified configurations.

    Task 2.3: Creating an Auto Scaling group
        - Use the launch template to create an Auto Scaling group with specified configurations.

Task 3: Verifying the auto scaling configuration
    - Verify that Auto Scaling group instances are initialized and healthy.

Task 4: Testing auto scaling configuration
    - Access the web application through the load balancer and initiate stress testing.
    - Monitor Auto Scaling group activity in the AWS Management Console.
